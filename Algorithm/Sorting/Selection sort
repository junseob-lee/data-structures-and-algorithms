public static <T> void selectionSort(T[] arr, Comparator<T> comparator) {
    // Check for null inputs
    if (arr == null || comparator == null) {
        throw new IllegalArgumentException("Array or comparator cannot be null.");
    }

    // Get the length of the array
    int n = arr.length;

    // Iterate through the array
    for (int i = 0; i < n - 1; i++) {
        // Assume the current index as the minimum
        int minIndex = i;

        // Find the index of the minimum element in the remaining unsorted part
        for (int j = i + 1; j < n; j++) {
            if (comparator.compare(arr[j], arr[minIndex]) < 0) {
                minIndex = j;
            }
        }

        // Swap the minimum element with the current element
        if (minIndex != i) {
            T temp = arr[i];
            arr[i] = arr[minIndex];
            arr[minIndex] = temp;
        }
    }
}
